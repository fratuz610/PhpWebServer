/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package it.holiday69.phpwebserver.ui;

import it.holiday69.phpwebserver.model.Model;
import it.holiday69.phpwebserver.utils.IconUtils;
import it.holiday69.tinyutils.ExceptionUtils;
import java.awt.Desktop;
import java.net.URI;
import java.util.logging.Logger;

/**
 *
 * @author fratuz610
 */
public class MinimalUI extends javax.swing.JFrame {

  private static final Logger log = Logger.getLogger(MinimalUI.class.getSimpleName());
  
  private final Model _model = Model.getInstance();
  /**
   * Creates new form MinimalUI
   */
  public MinimalUI() {
    
    try {
      IconUtils.associateIcons(this, "/php-ico-32.png", "/php-ico-48.png", "/php-ico-64.png", "/php-ico-128.png", "/php-ico-256.png");
    } catch(Throwable th) {
      log.warning("Unable to associate icons to the MinimalUI window because: " + th.getMessage());
    }
    
    initComponents();
    
    this.setTitle(_model.configObject.interfaceTitle);
    
    jInfoLabel.setText("Server started at http://127.0.0.1:"+_model.configObject.httpPort+"/");
    jTitleLabel.setText(_model.configObject.interfaceTitle);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTitleLabel = new javax.swing.JLabel();
        jInfoLabel = new javax.swing.JLabel();
        jOpenWebInterfaceBtn = new javax.swing.JButton();
        jExitBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                windowClosingHandler(evt);
            }
        });

        jTitleLabel.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jTitleLabel.setText("PhpWebserver");

        jInfoLabel.setText("Server started at http://127.0.0.1:9080/");

        jOpenWebInterfaceBtn.setText("Open Web Interface");
        jOpenWebInterfaceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOpenWebInterfaceBtnActionPerformed(evt);
            }
        });

        jExitBtn.setText("Exit");
        jExitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jExitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jOpenWebInterfaceBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jExitBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jInfoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jOpenWebInterfaceBtn)
                    .addComponent(jExitBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void windowClosingHandler(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_windowClosingHandler
    shutdown();
  }//GEN-LAST:event_windowClosingHandler

  private void jExitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jExitBtnActionPerformed
    shutdown();
  }//GEN-LAST:event_jExitBtnActionPerformed

  private void jOpenWebInterfaceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOpenWebInterfaceBtnActionPerformed
    if (Desktop.isDesktopSupported()) {
      Desktop desktop = Desktop.getDesktop();
      if(desktop.isSupported(Desktop.Action.BROWSE)) {
        try {
            URI uri = new URI("http://127.0.0.1:" + _model.configObject.httpPort + _model.configObject.interfaceURL);
            desktop.browse(uri);
        } catch(Exception ioe) {
            log.severe("Unable to browse to core interface because: " + ExceptionUtils.getFullExceptionInfo(ioe));
        }
      }
    }
  }//GEN-LAST:event_jOpenWebInterfaceBtnActionPerformed
  
  private void shutdown() {
    this.setEnabled(false);
    Model.getInstance().notifyShutdown();
  }
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jExitBtn;
    private javax.swing.JLabel jInfoLabel;
    private javax.swing.JButton jOpenWebInterfaceBtn;
    private javax.swing.JLabel jTitleLabel;
    // End of variables declaration//GEN-END:variables
}
